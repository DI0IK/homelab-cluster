---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: znc-pvc
  annotations:
    nfs.io/storage-path: data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-client
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: znc-nginx-pvc
  annotations:
    nfs.io/storage-path: data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-client
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: questing-webserver-nginx-config
  labels:
    app: questing-webserver
  namespace: znc
data:
  default.conf: |
    server {
        listen 8080;
        server_name localhost;

        location /quest_stats.json {
            root /usr/share/nginx/html/znc-data/modules/propool;
            add_header Access-Control-Allow-Origin *;
        }

        location /quest_stats/ {
            alias /usr/share/nginx/html/znc-data/modules/quest_tracker/;
            autoindex on;
            add_header Access-Control-Allow-Origin *;
        }

        location / {
            deny all;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: znc
  labels:
    app: znc
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: znc
  template:
    metadata:
      labels:
        app: znc
    spec:
      securityContext:
        fsGroup: 101
      containers:
        - name: znc
          image: znc:1.10.1
          ports:
            - name: znc-port
              containerPort: 6697
          volumeMounts:
            - name: znc-data
              mountPath: /znc-data
        - name: nginx
          image: nginx:latest
          ports:
            - name: http-web
              containerPort: 8080
          volumeMounts:
            - name: znc-nginx-pvc
              mountPath: /usr/share/nginx/html/znc-data
              readOnly: true
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: znc-data
          persistentVolumeClaim:
            claimName: znc-pvc
        - name: znc-nginx-data
          persistentVolumeClaim:
            claimName: znc-nginx-pvc
        - name: nginx-config
          configMap:
            name: questing-webserver-nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: znc-service
  labels:
    app: znc
spec:
  selector:
    app: znc
  ports:
    - name: znc-port
      protocol: TCP
      port: 6697
      targetPort: znc-port
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: znc-ingress
  namespace: znc
  labels:
    app.kubernetes.io/name: znc
  annotations:
    gethomepage.dev/href: "https://znc.dominikstahl.dev"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/description: "ZNC bouncer"
    gethomepage.dev/group: System
    gethomepage.dev/icon: znc
    gethomepage.dev/app: znc
    gethomepage.dev/name: ZNC
    gethomepage.dev/pod-selector: "app.kubernetes.io/name=znc"
    gethomepage.dev/allowGroups: ZNC
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`znc.dominikstahl.dev`)
      kind: Rule
      services:
        - name: znc-service
          kind: Service
          port: 6697
---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  name: znc
  namespace: znc
spec:
  entryPoints:
    - irc
  routes:
    - match: HostSNI(`znc.dominikstahl.dev`)
      services:
        - name: znc-service
          port: 6697
  tls: {}
---
apiVersion: v1
kind: Service
metadata:
  name: questing-webserver-service
  labels:
    app: znc
spec:
  selector:
    app: znc
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: questing-webserver-ingress
  namespace: znc
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`questing-data.dominikstahl.dev`)
      kind: Rule
      services:
        - name: questing-webserver-service
          kind: Service
          port: 8080