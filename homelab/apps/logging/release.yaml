---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: logging-stack
  namespace: logging
spec:
  interval: 10m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "77.10.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      interval: 10m
  values:
    prometheus:
      prometheusSpec:
        secrets:
          - etcd-secrets
        serviceMonitorSelectorNilUsesHelmValues: false
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelector: {}
        alertmanagerConfigSelectorNilUsesHelmValues: false
        alertmanagerConfigNamespaceSelector: {}
        alertmanagerConfigSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        podMonitorNamespaceSelector: {}
        podMonitorSelector: {}
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-client
              accessModes: ["ReadWriteOnce"]
              annotations:
                nfs.io/storage-path: prometheus
              resources:
                requests:
                  storage: 50Gi
    alertmanager:
      extraSecretMounts:
        - name: pagerduty-secret-volume
          secretName: pagerduty-secret
          mountPath: /etc/alertmanager/secrets
          readOnly: true
      config:
        receivers:
          - name: "PagerDuty"
            pagerduty_configs:
              - send_resolved: true
                service_key_file: "/etc/alertmanager/secrets/service_key"
          - name: "null"
        route:
          group_by: [cluster]
          receiver: PagerDuty
          routes:
            - match:
                severity: critical
              receiver: "PagerDuty"
            - match:
                severity: warning
              receiver: "PagerDuty"
            - match:
                severity: info
              receiver: "null"
    kubeControllerManager:
      enabled: true
      service:
        selector:
          k8s-app: kube-controller-manager
    kubeScheduler:
      enabled: true
      service:
        selector:
          k8s-app: kube-controller-manager
    kubeProxy:
      enabled: true
      service:
        enabled: true
        port: 10249
        targetPort: 10249
        selector:
          k8s-app: kube-proxy
    kubeEtcd:
      service:
        enabled: true
        port: 2379
        targetPort: 2379
        selector:
          k8s-app: kube-controller-manager
      serviceMonitor:
        scheme: https
        insecureSkipVerify: false
        serverName: "localhost"
        caFile: "/etc/prometheus/secrets/etcd-secrets/ca.crt"
        certFile: "/etc/prometheus/secrets/etcd-secrets/server.crt"
        keyFile: "/etc/prometheus/secrets/etcd-secrets/server.key"
